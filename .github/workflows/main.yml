name: Fetch Pull Request Comment

on:
  push:
    branches:
      - main

jobs:
  fetch_pr_comment:
    runs-on: ubuntu-latest
    steps:
      - name: Checkout code
        uses: actions/checkout@v2

      - name: Get the PR number
        id: get_pr_number
        run: |
          PR_NUMBER=$(curl -s -H "Authorization: token ${{ secrets.GITHUB_TOKEN }}" \
            "https://api.github.com/repos/${{ github.repository }}/commits/${{ github.sha }}/pulls" \
            | jq '.[0].number')
          echo "PR_NUMBER=$PR_NUMBER" >> $GITHUB_ENV

      - name: Fetch PR Comment
        id: fetch_pr_comment
        run: |
          PR_COMMENT=$(curl -s -H "Authorization: token ${{ secrets.GITHUB_TOKEN }}" \
            "https://api.github.com/repos/${{ github.repository }}/issues/${PR_NUMBER}/comments" \
            | jq '.[0].body')
          echo "PR Comment: $PR_COMMENT"
          echo "::set-output name=pr_comment::$PR_COMMENT"

      - name: Extract URL from PR Comment
        id: extract_url
        run: |
          PR_COMMENT="${{ steps.fetch_pr_comment.outputs.pr_comment }}"
          if [[ $PR_COMMENT =~ (http.*com) ]]; then
            URL="${BASH_REMATCH[1]}"
            echo "Found URL: $URL"
            echo "::set-output name=url::$URL"
            echo "::set-output name=success::true"
          else
            echo "No matching URL found"
            echo "::set-output name=success::false"
          fi

      - name: Cache dependencies
        if: ${{ steps.extract_url.outputs.success == 'true' }}
        uses: actions/cache@v2
        with:
          path: |
            ~/.npm
            ~/.cache
            /opt/allure
          key: ${{ runner.os }}-node-${{ hashFiles('**/package-lock.json') }}
          restore-keys: |
            ${{ runner.os }}-node-
            ${{ runner.os }}-
 
      - name: Checkout code
        if: ${{ steps.extract_url.outputs.success == 'true' }}
        uses: actions/checkout@v2
 
      - name: Install Chromium
        if: ${{ steps.extract_url.outputs.success == 'true' }}
        run: sudo apt install chromium-browser
 
      - name: Use Node.js
        if: ${{ steps.extract_url.outputs.success == 'true' }}
        uses: actions/setup-node@v1
        with:
           node-version: 16.15.1
 
      - name: Install dependencies
        if: ${{ steps.extract_url.outputs.success == 'true' }}
        run: npm install
 
      - name: Run E2E tests
        if: ${{ steps.extract_url.outputs.success == 'true' }}
        run: npx cross-env BASE_URL=${{ steps.extract_url.outputs.url }} npm run web
 
      - name: Download and Install Allure
        if: ${{ steps.extract_url.outputs.success == 'true' }}
        run: |
           wget https://repo.maven.apache.org/maven2/io/qameta/allure/allure-commandline/2.16.0/allure-commandline-2.16.0.zip
           unzip allure-commandline-2.16.0.zip
           sudo mv allure-2.16.0 /opt/allure
           sudo ln -s /opt/allure/bin/allure /usr/bin/allure
 
      - name: Generate Allure Reports
        if: ${{ steps.extract_url.outputs.success == 'true' }}
        run: |
           allure generate allure-results --clean -o allure-report
 
      - name: Publish Allure Reports
        if: ${{ steps.extract_url.outputs.success == 'true' }}
        uses: peaceiris/actions-gh-pages@v3
        with:
           github_token: ${{ secrets.GITHUB_TOKEN }}
           publish_dir: ./allure-report
